AWSTemplateFormatVersion: "2010-09-09"
Description: |
  Standalone EC2 instance

Parameters:
  ProjectName:
    Type: String
    Description: The name of the project
    Default: testing
  Environment:
    Type: String
    Description: The name of the environment
    Default: dev
  InstanceType:
    Type: String
    Description: The type of the EC2 instance
    Default: t3a.small
    AllowedValues: 
      - t3a.nano
      - t3a.micro
      - t3a.small
      - t3a.medium
      - t3a.large 
  AmiId:
    Type: AWS::EC2::Image::Id
    Description: The ID of the AMI
    Default: ami-04b683923501a6f2c # x84-64 Ubuntu 20.04
  RootDeviceName:
    Type: String
    Description: The identifier for the root volume
    Default: sda1
  RootVolumeSize:
    Type: Number
    Description: The size of the root volume
    Default: 12
  RootVolumeType:
    Type: String
    Description: The type of the root volume
    Default: gp2
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The name of the key pair
    Default: stuart-ellis-labs-default-eu-west-1
  SubnetId:
    Type: String
    Description: The ID of the subnet
    Default: subnet-252e3d6d
  VpcId:
    Type: String
    Description: The ID of the VPC
    Default: vpc-44be683d
  OpsLocation0001:
    Type: String
    Description: The CIDR IP range for admin access
    Default: 0.0.0.0/0

Resources:
 
  Instance0001: 
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 01_setupCfnHup
        01_setupCfnHup:
          files:
             '/etc/cfn/cfn-hup.conf':
               content: !Sub |
                 [main]
                 stack=${AWS::StackId}
                 region=${AWS::Region}
                 interval=1
               mode: '000400'
               owner: root
               group: root
          commands:
            01enable_cfn_hup:
              command: systemctl enable cfn-hup.service
            02start_cfn_hup:
              command: systemctl start cfn-hup.service

    Properties:
      IamInstanceProfile: !Ref InstanceIamProfile
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref InstanceRemoteAccess
      SubnetId: !Ref SubnetId
      BlockDeviceMappings:
        - DeviceName: !Sub /dev/${RootDeviceName}
          Ebs:
            VolumeSize: !Ref RootVolumeSize
            VolumeType: !Ref RootVolumeType
            
      Tags:
        - Key: sje:environment
          Value: !Ref Environment
        - Key: sje:project
          Value: !Ref ProjectName
        - Key: Patch Group
          Value: !Sub "${Environment}-ubuntu-standard"
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          /usr/local/bin/cfn-init -v --stack ${AWS::StackId} --resource Instance0001 --region ${AWS::Region} --configsets default
          /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource Instance0001 --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: "PT15M"

  InstanceIamRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement: 
          - 
            Effect: Allow
            Principal: 
              Service: 
                - ec2.amazonaws.com
            Action: 
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      RoleName: !Join
                  - '-'
                  - - !Ref AWS::Region 
                    - !Ref AWS::StackName
                    - 'SSMManagedInstances'

  InstanceIamProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Join
                   - '-'
                   - - !Ref AWS::Region 
                     - !Ref AWS::StackName
                     - 'InstanceProfile'
      Roles: 
        - 
          Ref: InstanceIamRole

  InstanceRemoteAccess:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Remote access
      GroupName: !Sub ${AWS::StackName}-Remote-Access
      VpcId: !Ref VpcId

  IngressSSHAccess0001:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      CidrIp: !Ref OpsLocation0001
      FromPort: 22
      GroupId: !Ref InstanceRemoteAccess
      IpProtocol: tcp
      ToPort: 22
